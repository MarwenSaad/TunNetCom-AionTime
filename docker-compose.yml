version: '3.4'

services:
  prometheus:
    container_name: Prometheus_Container
    image: prom/prometheus:v2.48.1
    volumes:
      - ./DockerConfigs/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "127.0.0.1:9090:9090"

  otel-collector:
    container_name: Otel_Collector_Container
    image: otel/opentelemetry-collector-contrib:0.91.0
    command: --config /etc/otelcol/otel-collector-config.yml
    volumes:
      - ./DockerConfigs/otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml
    ports:
      - "127.0.0.1:4317:4317"
    depends_on:
      - jaeger


  jaeger:
    container_name: Jaeger_Container
    image: jaegertracing/all-in-one:1.52
    command: --query.ui-config=/etc/jaeger/jaeger-ui.json --collector.otlp.enabled=true --prometheus.server-url=http://prometheus:9090 --prometheus.query.support-spanmetrics-connector=true
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
    volumes:
      - ./DockerConfigs/jaeger-ui.json:/etc/jaeger/jaeger-ui.json
    ports:
      - "127.0.0.1:16686:16686"


  SqlServerDb:
    container_name: Sql_Server_Container
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - 8002:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=TunetCom2024 
  
  azuredevopsidentityservice:
    container_name: Azure_Devops_Identity_Service_Container
    image: ${DOCKER_REGISTRY-}azuredevopsidentityservice
    build:
      context: .
      dockerfile: src/AzureDevopsIdentityService/AzureDevopsIdentityService/Dockerfile
    environment:
        ServiceName : Azure_Devops_Identity_Service
        loki: http://loki:3100
        ASPNETCORE_ENVIRONMENT: Development
        ASPNETCORE_URLS: https://+:443;http://+:80
        OTEL_EXPORTER_JAEGER_AGENT_HOST : jaeger
        OTEL_EXPORTER_JAEGER_AGENT_PORT : 6831
        OTEL_EXPORTER_JAEGER_ENDPOINT : http://jaeger:14268/api/traces
        OTEL_EXPORTER_OTLP_ENDPOINT : http://otel-collector:4317
        ASPNETCORE_HTTP_PORTS : 80
    depends_on: 
        - loki 

  azuredevopswebhookservice:
    container_name: Azure_Devops_Webhook_Service_Container
    image: ${DOCKER_REGISTRY-}azuredevopswebhookservice
    build:
      context: .
      dockerfile: src/AzureDevopsWebhookService/AzureDevopsWebhookService/Dockerfile
    environment:
        ServiceName : Azure_Devops_Webhook_Service
        loki: http://loki:3100
        ASPNETCORE_ENVIRONMENT: Development
        ASPNETCORE_URLS: https://+:443;http://+:80
        OTEL_EXPORTER_JAEGER_AGENT_HOST : jaeger
        OTEL_EXPORTER_JAEGER_AGENT_PORT : 6831
        OTEL_EXPORTER_JAEGER_ENDPOINT : http://jaeger:14268/api/traces
        OTEL_EXPORTER_OTLP_ENDPOINT : http://otel-collector:4317
        ASPNETCORE_HTTP_PORTS : 80
    depends_on: 
        - loki 

  tunnetcom.aiontime.timelogservice.api:
    container_name: TimeLog_Service_Container
    image: ${DOCKER_REGISTRY-}tunnetcomaiontimetimelogserviceapi
    build:
      context: .
      dockerfile: src/TunNetCom.AionTime.TimeLogService/TunNetCom.AionTime.TimeLogService.Budget.API/Dockerfile
    environment:
        ServiceName : TimeLog_Service
        loki: http://loki:3100
        ASPNETCORE_ENVIRONMENT: Development
        ASPNETCORE_URLS: https://+:443;http://+:80
        OTEL_EXPORTER_JAEGER_AGENT_HOST : jaeger
        OTEL_EXPORTER_JAEGER_AGENT_PORT : 6831
        OTEL_EXPORTER_JAEGER_ENDPOINT : http://jaeger:14268/api/traces
        OTEL_EXPORTER_OTLP_ENDPOINT : http://otel-collector:4317
        ASPNETCORE_HTTP_PORTS : 80
    ports:
        - 8085:80
        - 8086:443
    depends_on: 
        - SqlServerDb
        - loki 

  tunnetcom.aiontime.azuredevopsservice.api:
    container_name: Azure_Devops_Service_Container
    image: ${DOCKER_REGISTRY-}tunnetcomaiontimeazuredevopsserviceapi
    build:
      context: .
      dockerfile: src/TunNetCom.AionTime.AzureDevopsService/TunNetCom.AionTime.AzureDevopsService.API/Dockerfile
    environment:
        ServiceName : Azure_Devops_Service
        loki: http://loki:3100
        ASPNETCORE_ENVIRONMENT: Development
        ASPNETCORE_URLS: https://+:443;http://+:80
        OTEL_EXPORTER_JAEGER_AGENT_HOST: jaeger
        OTEL_EXPORTER_JAEGER_AGENT_PORT : 6831
        OTEL_EXPORTER_JAEGER_ENDPOINT : http://jaeger:14268/api/traces
        OTEL_EXPORTER_OTLP_ENDPOINT : http://otel-collector:4317
        ASPNETCORE_HTTP_PORTS : 80
    ports:
        - 8090:80
        - 8091:443
    depends_on: 
            loki : 
             condition: service_healthy


  loki:
    container_name: Loki_Container
    image: grafana/loki:master
    ports:
       - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3100/ready 
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

  grafana:
    container_name: Grafana_Container
    volumes:
      - ./DockerConfigs/grafana.ini:/DockerConfigs/grafana.ini
      - ./DockerConfigs/datasource.yml:/DockerConfigs/datasource.yaml
      - ./DockerConfigs/dashboard.yml:/DockerConfigs/dashboard.yml
      - ./DockerConfigs/dotnet-otel-dashboard.json:/DockerConfigs/dotnet-otel-dashboard.json
      - ./DockerConfigs/logs-dashboard.json:/DockerConfigs/logs-dashboard.json
    image: grafana/grafana:master
    ports:
      - "3000:3000"
    depends_on:
        loki:
            condition: service_healthy

